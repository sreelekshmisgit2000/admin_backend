# Generated by Django 5.1.5 on 2025-07-15 05:04

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('hospital_app', '0003_accreditation'),
    ]

    operations = [
        migrations.CreateModel(
            name='TreatmentCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True)),
                ('category_type', models.CharField(choices=[('medical', 'Medical'), ('surgical', 'Surgical'), ('diagnostic', 'Diagnostic'), ('therapeutic', 'Therapeutic'), ('preventive', 'Preventive'), ('emergency', 'Emergency')], default='medical', max_length=20)),
                ('image', models.ImageField(blank=True, null=True, upload_to='category_images/')),
                ('icon', models.CharField(blank=True, help_text='CSS icon class or icon name', max_length=50)),
                ('color_code', models.CharField(blank=True, help_text='Hex color code for UI display', max_length=7)),
                ('is_featured', models.BooleanField(default=False, help_text='Whether this category should be featured on homepage')),
                ('display_order', models.IntegerField(default=0, help_text='Order for display in lists')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Treatment Categories',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.AlterModelOptions(
            name='accreditation',
            options={'ordering': ['-valid_to', 'title']},
        ),
        migrations.AlterModelOptions(
            name='alliedservice',
            options={'ordering': ['service_type', 'name']},
        ),
        migrations.AlterModelOptions(
            name='treatment',
            options={'ordering': ['name']},
        ),
        migrations.AddField(
            model_name='accreditation',
            name='accreditation_type',
            field=models.CharField(choices=[('national', 'National'), ('international', 'International'), ('state', 'State'), ('specialty', 'Specialty'), ('quality', 'Quality')], default='national', max_length=20),
        ),
        migrations.AddField(
            model_name='accreditation',
            name='contact_email',
            field=models.EmailField(blank=True, max_length=254),
        ),
        migrations.AddField(
            model_name='accreditation',
            name='contact_person',
            field=models.CharField(blank=True, max_length=100),
        ),
        migrations.AddField(
            model_name='accreditation',
            name='contact_phone',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='accreditation',
            name='notes',
            field=models.TextField(blank=True, help_text='Additional notes or requirements'),
        ),
        migrations.AddField(
            model_name='accreditation',
            name='renewal_reminder_days',
            field=models.IntegerField(default=90, help_text='Days before expiry to send reminder'),
        ),
        migrations.AddField(
            model_name='accreditation',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('pending', 'Pending'), ('suspended', 'Suspended'), ('revoked', 'Revoked')], default='active', max_length=20),
        ),
        migrations.AddField(
            model_name='accreditation',
            name='website_url',
            field=models.URLField(blank=True, help_text='Official website of the accrediting authority'),
        ),
        migrations.AddField(
            model_name='alliedservice',
            name='contact_number',
            field=models.CharField(blank=True, max_length=20),
        ),
        migrations.AddField(
            model_name='alliedservice',
            name='duration_minutes',
            field=models.IntegerField(blank=True, help_text='Estimated duration in minutes', null=True),
        ),
        migrations.AddField(
            model_name='alliedservice',
            name='is_emergency_available',
            field=models.BooleanField(default=False, help_text='Whether this service is available for emergencies'),
        ),
        migrations.AddField(
            model_name='alliedservice',
            name='location',
            field=models.CharField(blank=True, help_text='Department or floor location', max_length=200),
        ),
        migrations.AddField(
            model_name='alliedservice',
            name='operating_hours',
            field=models.CharField(blank=True, help_text='e.g., Mon-Fri 8AM-6PM', max_length=100),
        ),
        migrations.AddField(
            model_name='alliedservice',
            name='requires_appointment',
            field=models.BooleanField(default=True, help_text='Whether this service requires prior appointment'),
        ),
        migrations.AddField(
            model_name='alliedservice',
            name='service_type',
            field=models.CharField(choices=[('laboratory', 'Laboratory'), ('radiology', 'Radiology'), ('pharmacy', 'Pharmacy'), ('physiotherapy', 'Physiotherapy'), ('nutrition', 'Nutrition'), ('counseling', 'Counseling'), ('transport', 'Transport'), ('housekeeping', 'Housekeeping'), ('security', 'Security'), ('maintenance', 'Maintenance')], default='laboratory', max_length=20),
        ),
        migrations.AddField(
            model_name='alliedservice',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('maintenance', 'Under Maintenance')], default='active', max_length=20),
        ),
        migrations.AddField(
            model_name='treatment',
            name='duration_hours',
            field=models.IntegerField(blank=True, help_text='Duration in hours for shorter treatments', null=True),
        ),
        migrations.AddField(
            model_name='treatment',
            name='insurance_coverage',
            field=models.BooleanField(default=False, help_text='Whether this treatment is covered by insurance'),
        ),
        migrations.AddField(
            model_name='treatment',
            name='post_treatment_care',
            field=models.TextField(blank=True, help_text='Post-treatment care instructions'),
        ),
        migrations.AddField(
            model_name='treatment',
            name='preparation_instructions',
            field=models.TextField(blank=True, help_text='Instructions for patient preparation'),
        ),
        migrations.AddField(
            model_name='treatment',
            name='requires_anesthesia',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='treatment',
            name='requires_room',
            field=models.BooleanField(default=False, help_text='Whether this treatment requires a hospital room'),
        ),
        migrations.AddField(
            model_name='treatment',
            name='risk_factors',
            field=models.TextField(blank=True, help_text='Potential risks and complications'),
        ),
        migrations.AddField(
            model_name='treatment',
            name='status',
            field=models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive'), ('discontinued', 'Discontinued')], default='active', max_length=20),
        ),
        migrations.AddField(
            model_name='treatment',
            name='success_rate',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Success rate percentage', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)]),
        ),
        migrations.AddField(
            model_name='treatment',
            name='treatment_type',
            field=models.CharField(choices=[('surgery', 'Surgery'), ('therapy', 'Therapy'), ('consultation', 'Consultation'), ('diagnostic', 'Diagnostic'), ('emergency', 'Emergency'), ('preventive', 'Preventive')], default='consultation', max_length=20),
        ),
        migrations.CreateModel(
            name='AccreditationRenewal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('renewal_date', models.DateField()),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('overdue', 'Overdue')], max_length=20)),
                ('documents_submitted', models.BooleanField(default=False)),
                ('fees_paid', models.BooleanField(default=False)),
                ('notes', models.TextField(blank=True)),
                ('accreditation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital_app.accreditation')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('is_available', models.BooleanField(default=True)),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital_app.alliedservice')),
            ],
        ),
        migrations.CreateModel(
            name='TreatmentEquipment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('equipment_name', models.CharField(max_length=100)),
                ('equipment_type', models.CharField(max_length=50)),
                ('is_required', models.BooleanField(default=True)),
                ('quantity_needed', models.IntegerField(default=1)),
                ('treatment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital_app.treatment')),
            ],
        ),
        migrations.CreateModel(
            name='TreatmentSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('day_of_week', models.IntegerField(choices=[(0, 'Monday'), (1, 'Tuesday'), (2, 'Wednesday'), (3, 'Thursday'), (4, 'Friday'), (5, 'Saturday'), (6, 'Sunday')])),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('max_patients', models.IntegerField(default=10)),
                ('is_available', models.BooleanField(default=True)),
                ('treatment', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='hospital_app.treatment')),
            ],
        ),
    ]
